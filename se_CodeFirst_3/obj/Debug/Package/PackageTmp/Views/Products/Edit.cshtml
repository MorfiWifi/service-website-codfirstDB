@model se_CodeFirst_3.Models.Product
@{
    ViewBag.Title = "تغییر محصول";
    //PagedList.IPagedList<se_CodeFirst_3.Models.Supplier> suppliersList = ViewBag.SuppliersList;
    List<se_CodeFirst_3.Models.Supplier> suppliersList2 = ViewBag.SuppliersList2;
}

<script src="~/Scripts/jquery-3.1.1.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Plugins/materialize/css/materialize.css" rel="stylesheet" />
<script src="~/Plugins/materialize/js/materialize.js"></script>

<h2 class="page-title page-title-change"><span class="glyphicon glyphicon-edit"></span> @ViewBag.Title</h2>

<div ng-app="createItemApp" ng-controller="createItemCtrl" class="col-sm-offset-2 col-sm-8 table-responsive ">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { name = "ahkform" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <table class="table table-condensed table-striped table-bordered ahk-fixed-table-layout">
            <tr>
                <th>ویژگی</th>
                <th>مقدار</th>
                <th>درستی</th>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    <input type="text" value="@Model.Name" name="Name" class="form-control" autofocus="autofocus" required ng-model="Name" do-not-allow-special-characters />
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </td>
                <td>
                    <span class="show-error" ng-show="ahkform.Name.$dirty && ahkform.Name.$invalid">
                        <span ng-show="ahkform.Name.$error.required || ahkform.Name.$error.ahkUnAllowedChars" class="glyphicon glyphicon-remove"></span>
                        <span ng-show="ahkform.Name.$error.ahkUnAllowedChars">نباید کاراکتر غیر مجاز داشته باشد.</span>
                        <span ng-show="ahkform.Name.$error.required">این فیلد نمی تواند خالی باشد.</span>
                    </span>
                    <span class="show-success" ng-show="ahkform.Name.$dirty && !ahkform.Name.$invalid">
                        <span ng-hide="ahkform.Name.$error.required" class="glyphicon glyphicon-check"></span>
                    </span>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.BuyUnitPrice, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    <input type="number" value="@Model.BuyUnitPrice" name="BuyUnitPrice" class="form-control" required="required" ng-model="UnitPrice" min="0" />
                    @Html.ValidationMessageFor(model => model.BuyUnitPrice, "", new { @class = "text-danger" })
                </td>
                <td>
                    <span class="show-error" ng-show="ahkform.BuyUnitPrice.$dirty && ahkform.BuyUnitPrice.$invalid">
                        <span ng-show="ahkform.BuyUnitPrice.$error.required || ahkform.BuyUnitPrice.$error.number || ahkform.BuyUnitPrice.$error.min" class="glyphicon glyphicon-remove"></span>
                        <span ng-show="ahkform.BuyUnitPrice.$error.required">این فیلد نمی تواند خالی باشد.</span>
                        <span ng-show="ahkform.BuyUnitPrice.$error.number">این فیلد حتما باید عدد باشد.</span>
                        <span ng-show="ahkform.BuyUnitPrice.$error.min">یک عدد معتبر وارد کنید.</span>
                    </span>
                    <span class="show-success" ng-show="ahkform.BuyUnitPrice.$dirty && !ahkform.BuyUnitPrice.$invalid">
                        <span ng-hide="ahkform.BuyUnitPrice.$error.required || ahkform.BuyUnitPrice.$error.min" class="glyphicon glyphicon-check"></span>
                    </span>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.SellUnitPrice, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    <input type="number" value="@Model.SellUnitPrice" name="SellUnitPrice" class="form-control" required="required" ng-model="SellUnitPrice" min="0" />
                    @Html.ValidationMessageFor(model => model.SellUnitPrice, "", new { @class = "text-danger" })
                </td>
                <td>
                    <span class="show-error" ng-show="ahkform.SellUnitPrice.$dirty && ahkform.SellUnitPrice.$invalid">
                        <span ng-show="ahkform.SellUnitPrice.$error.required || ahkform.SellUnitPrice.$error.number || ahkform.SellUnitPrice.$error.min" class="glyphicon glyphicon-remove"></span>
                        <span ng-show="ahkform.SellUnitPrice.$error.required">این فیلد نمی تواند خالی باشد.</span>
                        <span ng-show="ahkform.SellUnitPrice.$error.number">این فیلد حتما باید عدد باشد.</span>
                        <span ng-show="ahkform.SellUnitPrice.$error.min">یک عدد معتبر وارد کنید.</span>
                    </span>
                    <span class="show-success" ng-show="ahkform.SellUnitPrice.$dirty && !ahkform.SellUnitPrice.$invalid">
                        <span ng-hide="ahkform.SellUnitPrice.$error.required || ahkform.SellUnitPrice.$error.min" class="glyphicon glyphicon-check"></span>
                    </span>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    <input type="number" value="@Model.UnitsInStock" name="UnitsInStock" class="form-control" required="required" ng-model="UnitsInStock" min="0" />
                    @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                </td>
                <td>
                    <span class="show-error" ng-show="ahkform.UnitsInStock.$dirty && ahkform.UnitsInStock.$invalid">
                        <span ng-show="ahkform.UnitsInStock.$error.required || ahkform.UnitsInStock.$error.number || ahkform.UnitsInStock.$error.min" class="glyphicon glyphicon-remove"></span>
                        <span ng-show="ahkform.UnitsInStock.$error.required">این فیلد نمی تواند خالی باشد.</span>
                        <span ng-show="ahkform.UnitsInStock.$error.number">این فیلد حتما باید عدد باشد.</span>
                        <span ng-show="ahkform.UnitsInStock.$error.min">یک عدد معتبر وارد کنید.</span>
                    </span>
                    <span class="show-success" ng-show="ahkform.UnitsInStock.$dirty && !ahkform.UnitsInStock.$invalid">
                        <span ng-hide="ahkform.UnitsInStock.$error.required || ahkform.UnitsInStock.$error.min" class="glyphicon glyphicon-check"></span>
                    </span>
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.SupplierId, "تولیدکننده", htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    <!-- Dropdown Trigger -->
                    <a class='dropdown-button btn btn-success' href='#' data-activates='dropdown1' style="width:100%">{{valueToShowInButton}}</a>

                    <!-- Dropdown Structure -->
                    <ul id='dropdown1' class='dropdown-content ahk-style-for-dropdown-searches'>
                        <li>
                            <input class="form-control" type="text" name="NameSearch" ng-model="NameSearch" value=" " placeholder="نام" />
                            <input class="form-control" type="text" name="CompanyNameSearch" ng-model="CompanyNameSearch" value=" " placeholder="شرکت" />
                            <input class="form-control" type="text" name="PhoneNumberSearch" ng-model="PhoneNumberSearch" value=" " placeholder="شماره تلفن" />
                        </li>
                        <li ng-repeat="x in suppliersList2 | filter : {Name:NameSearch, CompanyName:CompanyNameSearch,PhoneNumber:PhoneNumberSearch}">
                            <span ng-click="setItemId(x.Id, x.Name)" style="border-bottom:1px dashed rgb(255, 106, 0);">
                                {{"نام: "+x.Name+"|"+"نام شرکت: "+x.CompanyName+"|"+"شماره: "+x.PhoneNumber}}
                            </span>
                        </li>
                    </ul>
                    <input type="hidden" name="SupplierId" ng-model="SupplierId" id="SupplierId" value="{{SupplierId}}" required="required" onchange="callAngularMethodFromJavaScript('SupplierId')" />

@*                    @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                </td>
                <td></td>
            </tr>
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-warning"><span class="glyphicon glyphicon-edit" ng-disabled="ahkform.Name.$invalid || ahkform.UnitPrice.$invalid || ahkform.UnitsInStock.$invalid
                        || ahkform.SellUnitPrice.$invalid"></span> تغییر</button>
                <a href="~/products/Index" type="submit" class="btn btn-default"><span class="glyphicon glyphicon-backward"></span> برگشت به لیست</a>
            </div>
        </div>
    }
</div>

<script>
    $(document).ready(function () {
        $('.dropdown-button').dropdown({
            inDuration: 300,
            outDuration: 225,
            constrainWidth: false, // Does not change width of dropdown to that of the activator
            hover: true, // Activate on hover
            gutter: 50, // Spacing from edge
            belowOrigin: true, // Displays dropdown below the button
            alignment: 'left', // Displays dropdown with edge aligned to the left of button
            stopPropagation: true // Stops event propagation
        });
    });



</script>

<script>

    var app = angular.module('createItemApp', []);

    app.directive('doNotAllowSpecialCharacters', function () {
        return {
            require: 'ngModel',
            link: function (scope, element, attr, mCtrl) {
                function myValidation(inputToCheck) {
                    var result = true;
                    var chars = "*-+.=_)(&^%$#!~\"'";
                    var splitedChars = chars.split("");
                    for (var i = 0; i < splitedChars.length; i++) {
                        if (inputToCheck.indexOf(splitedChars[i]) > -1) {
                            result = false;
                        }
                    }

                    if (result == true) {
                        mCtrl.$setValidity('ahkUnAllowedChars', true);
                    }
                    else {
                        mCtrl.$setValidity('ahkUnAllowedChars', false);
                    }

                    return inputToCheck;
                }
                mCtrl.$parsers.push(myValidation);
            }
        };
    });

    app.controller('createItemCtrl', function ($scope, $http) {
        $scope.Name = @Html.Raw(Json.Encode(Model.Name));
        $scope.UnitPrice = @Html.Raw(Json.Encode(Model.BuyUnitPrice));
        $scope.SellUnitPrice = @Html.Raw(Json.Encode(Model.SellUnitPrice));
        $scope.UnitsInStock = @Html.Raw(Json.Encode(Model.UnitsInStock));

        $scope.suppliersList2 = @Html.Raw(Json.Encode(suppliersList2));
        $scope.SupplierId = @Html.Raw(Json.Encode(Model.Supplier.Id));
        $scope.valueToShowInButton = @Html.Raw(Json.Encode(Model.Supplier.Name));
        $scope.setItemId = function (itemId, itemName) {
            $scope.SupplierId = itemId;
            $scope.valueToShowInButton = itemName;
        };
    });



</script>